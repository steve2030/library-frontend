name: library App CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build React Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

   
  docker:
    name: Build and Push Docker Image with Incremented Tag
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get Latest Tag from Docker Hub
      run: |
        TAGS=$(curl -s "https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/library/tags" | jq -r '.results[].name')
        echo "Previous tags: $TAGS"
        LATEST_TAG=$(echo "$TAGS" | sort -rV | head -n 1)
        echo "Latest tag is $LATEST_TAG"
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

    - name: Increment Tag
      id: increment_tag
      run: |
        if [ -z "$LATEST_TAG" ]; then
          NEW_TAG="1.0.0"  # Start from 1.0.0 if no tags exist
        else
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
          PATCH=$((PATCH + 1))
          NEW_TAG="$MAJOR.$MINOR.$PATCH"
        fi
        echo "New tag is $NEW_TAG"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Build Docker Image with New Tag
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/library:${{ env.NEW_TAG }} .

    - name: Push Docker Image with New Tag
      run: docker push ${{ secrets.DOCKER_USERNAME }}/library:${{ env.NEW_TAG }}

  deploy-minikube:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: docker

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Start Minikube
      run: minikube start --driver=docker

    - name: Use Minikube Docker Environment
      run: eval $(minikube docker-env)

    - name: Pull and Tag Docker Image for Minikube
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/library:${{ env.NEW_TAG }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/library:${{ env.NEW_TAG }} library-app:${{ env.NEW_TAG }}

    - name: Create Namespace
      run: |
        kubectl create namespace library || echo "Namespace already exists"

    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -f deployment.yaml -n library
        kubectl apply -f service.yaml -n library

    - name: Verify Deployment
      run: |
        kubectl get pods -n library
        kubectl get services -n library
